name: Deploy with Local Build

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts

      - name: Transfer Files
        run: |
          # Create exact directory structure
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "mkdir -p ~/app-src"
          
          # Transfer entire repository (or specific files)
          rsync -avz -e "ssh -i ~/.ssh/ec2_key.pem" \
            ./ \
            ec2-user@${{ secrets.EC2_PUBLIC_IP }}:~/app-src/

      - name: Build and Deploy
        run: |
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Fix Docker permissions
            sudo usermod -aG docker ec2-user
            sudo systemctl restart docker
            
            # Build using k3s's contained runtime (no Docker needed)
            sudo k3s ctr images build \
              --tag local-nginx:latest \
              --no-progress \
              ~/app-src
            
            # Import into k3s directly
            sudo k3s ctr images import --digests ~/app-src/local-nginx.tar
            
            # Deploy with explicit paths
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            helm upgrade --install nginx ~/app-src/charts/nginx \
              --set image.repository=local-nginx \
              --set image.tag=latest \
              --set image.pullPolicy=IfNotPresent \
              --atomic
          EOF