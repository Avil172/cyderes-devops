name: Deploy with Local Build

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts

      - name: Transfer Files
        run: |
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "rm -rf ~/app-src && mkdir -p ~/app-src/charts"
          rsync -avz -e "ssh -i ~/.ssh/ec2_key.pem" \
            ./Dockerfile ./charts/nginx/ \
            ec2-user@${{ secrets.EC2_PUBLIC_IP }}:~/app-src/

      - name: Build and Deploy
        run: |
          ssh -i ~/.ssh/ec2_key.pem -T ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOSSH'
            # Clean up previous deployments
            helm uninstall nginx || true
            
            # Build using Docker
            sudo docker build -t local-nginx:latest ~/app-src
            
            # Save and load directly into k3s
            sudo docker save local-nginx:latest > ~/nginx-image.tar
            sudo k3s ctr images import ~/nginx-image.tar
            sudo k3s ctr images tag docker.io/library/local-nginx:latest local-nginx:latest
            
            # Deploy with correct image reference
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            helm upgrade --install nginx ~/app-src/charts/nginx \
              --set image.repository="local-nginx" \
              --set image.tag="latest" \
              --set image.pullPolicy="Never" \
              --atomic \
              --timeout 5m
          EOSSH

      - name: Verify Deployment
        run: |
          ssh -i ~/.ssh/ec2_key.pem -T ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOSSH'
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=nginx --timeout=120s
            kubectl get pods -o wide
          EOSSH