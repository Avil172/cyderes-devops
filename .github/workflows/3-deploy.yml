name: Deploy
on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Transfer Files
        run: |
          scp -i ~/.ssh/ec2_key.pem -r \
            ./Dockerfile \
            ./app \
            ./charts \
            ec2-user@${{ secrets.EC2_PUBLIC_IP }}:~/app-src/

      - name: Build and Deploy
        run: |
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Build with proper context
            cd ~/app-src
            sudo docker build -t local-nginx:latest .
            
            # Save and import with explicit k3s containerd
            sudo docker save local-nginx:latest > ~/nginx.tar
            sudo k3s ctr images import ~/nginx.tar
            sudo k3s ctr images tag docker.io/library/local-nginx:latest local-nginx:latest
            
            # Force new deployment
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            helm upgrade --install nginx ./charts/nginx \
              --set image.repository="local-nginx" \
              --set image.tag="latest" \
              --set image.pullPolicy="Never" \
              --atomic \
              --force
          EOF

      - name: Verify Content
        run: |
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            kubectl exec -it $(kubectl get pods -l app=nginx -o name) -- \
              cat /usr/share/nginx/html/index.html
          EOF