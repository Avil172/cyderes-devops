name: Deploy with Local Image Build

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts

      - name: Transfer Source Files
        run: |
          # Create directory structure
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            mkdir -p ~/app-src/Dockerfile
            mkdir -p ~/app-src/charts
          EOF
          
          # Transfer Dockerfile and chart
          rsync -avz -e "ssh -i ~/.ssh/ec2_key.pem" \
            ./Dockerfile ./charts/nginx/ \
            ec2-user@${{ secrets.EC2_PUBLIC_IP }}:~/app-src/

      - name: Build and Deploy
        run: |
          ssh -i ~/.ssh/ec2_key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Build local Docker image
            docker build -t local-nginx:latest ~/app-src
            
            # Load image into k3s
            sudo k3s crictl pull local-nginx:latest >/dev/null || true
            
            # Deploy with Helm
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            helm upgrade --install nginx ~/app-src/charts/nginx \
              --set image.repository=local-nginx \
              --set image.tag=latest \
              --set imagePullPolicy=Never \
              --atomic
          EOF

      - name: Cleanup
        run: rm -f ~/.ssh/ec2_key.pem